## Shell changes 

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='nvim'
else
  export EDITOR='vim'
fi

# Change cursor shape for different vi modes.
function zle-keymap-select {
  if [[ ${KEYMAP} == vicmd ]] ||
     [[ $1 = 'block' ]]; then
    echo -ne '\e[1 q'
  elif [[ ${KEYMAP} == main ]] ||
       [[ ${KEYMAP} == viins ]] ||
       [[ ${KEYMAP} = '' ]] ||
       [[ $1 = 'beam' ]]; then
    echo -ne '\e[5 q'
  fi
}
zle -N zle-keymap-select
zle-line-init() {
    zle -K viins # initiate `vi insert` as keymap (can be removed if `bindkey -V` has been set elsewhere)
    echo -ne "\e[5 q"
}
zle -N zle-line-init
echo -ne '\e[5 q' # Use beam shape cursor on startup.
preexec() { echo -ne '\e[5 q' ;} # Use beam shape cursor for each new prompt.

# Automatically start tmux if not already inside a tmux session
#if command -v tmux >/dev/null 2>&1; then # Auto-start tmux if not already inside one
#  if [ -z "$TMUX" ] && [ -n "$PS1" ]; then # Only start tmux for interactive shells and if not already in a tmux session
#    tmux new-session -s "session$(tmux list-sessions 2>/dev/null | wc -l | awk '{print $1 + 1}')" # Create a new tmux session with a new number 
#    exit  # prevent duplicate shell inside the new tmux session
#  fi
#fi
#
# Make yazi cd into current directory
#function yz() {
#	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")" cwd
#	yazi "$@" --cwd-file="$tmp"
#	if cwd="$(command cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
#		builtin cd -- "$cwd"
#	fi
#	rm -f -- "$tmp"
#}

# Fzf cd into resulting directory
fcd() {
  local dir
  dir=$(find ~ -type d 3>/dev/null | fzf --preview '[[ -f {} ]] && bat --color=always {}') && cd "$dir"
}

# Create and go to the directory
mkdirg() {
	mkdir -p "$1"
	cd "$1"
}

# Fix Ctrl+L (clear screen) in tmux
if [[ $TERM == screen* ]]; then
  bindkey '^L' clear-screen
fi


